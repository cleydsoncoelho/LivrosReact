{"ast":null,"code":"//Importar a classe Livro\n\n//Definir a variável livros, como Array<Livro>, contendo ao menos três elementos, no formato JSON\nconst livros = [{\n  codigo: 1,\n  codEditora: 1,\n  titulo: \"Livro A\",\n  resumo: \"Resumo do Livro A\",\n  autores: [\"Autor A\"]\n}, {\n  codigo: 2,\n  codEditora: 2,\n  titulo: \"Livro B\",\n  resumo: \"Resumo do Livro B\",\n  autores: [\"Autor B\"]\n}, {\n  codigo: 3,\n  codEditora: 3,\n  titulo: \"Livro C\",\n  resumo: \"Resumo do Livro C\",\n  autores: [\"Autor C\"]\n}];\n\n//Criar a classe ControleLivro, contendo os métodos obterLivros, incluir e excluir\nexport class ControleLivro {\n  //Implementar o método obterLivros, com o retorno do vetor livros\n  obterLivros() {\n    return livros;\n  }\n\n  //Implementar o método incluir, recebendo um objeto do tipo Livro, que terá o código trocado pelo código mais alto do vetor, incrementado de um, e depois será adicionado ao vetor\n  incluir(livro) {\n    livro.codigo = Math.max(...livros.map(livro => livro.codigo)) + 1;\n    livros.push(livro);\n  }\n\n  //Implementar o método excluir, recebendo um código numérico, que irá encontrar o índice do livro com o código fornecido, através de findIndex, e removê-lo com o uso de splice\n  excluir(codigo) {\n    const index = livros.findIndex(livro => livro.codigo === codigo);\n    if (index !== -1) {\n      livros.splice(index, 1);\n    }\n  }\n}\n// Exportar uma instância da classe ControleLivro como default\nconst controleLivro = new ControleLivro();\nexport default controleLivro;","map":{"version":3,"names":["livros","codigo","codEditora","titulo","resumo","autores","ControleLivro","obterLivros","incluir","livro","Math","max","map","push","excluir","index","findIndex","splice","controleLivro"],"sources":["D:/Estacio/Nivel 3/livros-react/src/controle/ControleLivros.ts"],"sourcesContent":["//Importar a classe Livro\r\nimport Livro from \"../modelo/Livro.js\";\r\n\r\n//Definir a variável livros, como Array<Livro>, contendo ao menos três elementos, no formato JSON\r\nconst livros: Array<Livro> = [\r\n    { codigo: 1, codEditora: 1, titulo: \"Livro A\", resumo: \"Resumo do Livro A\", autores: [\"Autor A\"] },\r\n    { codigo: 2, codEditora: 2, titulo: \"Livro B\", resumo: \"Resumo do Livro B\", autores: [\"Autor B\"] },\r\n    { codigo: 3, codEditora: 3, titulo: \"Livro C\", resumo: \"Resumo do Livro C\", autores: [\"Autor C\"] },\r\n];\r\n\r\n//Criar a classe ControleLivro, contendo os métodos obterLivros, incluir e excluir\r\nexport class ControleLivro {\r\n    //Implementar o método obterLivros, com o retorno do vetor livros\r\n    obterLivros(): Array<Livro> {\r\n        return livros;\r\n    }\r\n\r\n    //Implementar o método incluir, recebendo um objeto do tipo Livro, que terá o código trocado pelo código mais alto do vetor, incrementado de um, e depois será adicionado ao vetor\r\n    incluir(livro: Livro): void {\r\n        livro.codigo = Math.max(...livros.map((livro) => livro.codigo)) + 1;\r\n        livros.push(livro);\r\n    }\r\n\r\n    //Implementar o método excluir, recebendo um código numérico, que irá encontrar o índice do livro com o código fornecido, através de findIndex, e removê-lo com o uso de splice\r\n    excluir(codigo: number): void {\r\n        const index = livros.findIndex((livro) => livro.codigo === codigo);\r\n        if (index !== -1) {\r\n            livros.splice(index, 1);\r\n        }\r\n    }\r\n}\r\n// Exportar uma instância da classe ControleLivro como default\r\nconst controleLivro = new ControleLivro();\r\nexport default controleLivro;"],"mappings":"AAAA;;AAGA;AACA,MAAMA,MAAoB,GAAG,CACzB;EAAEC,MAAM,EAAE,CAAC;EAAEC,UAAU,EAAE,CAAC;EAAEC,MAAM,EAAE,SAAS;EAAEC,MAAM,EAAE,mBAAmB;EAAEC,OAAO,EAAE,CAAC,SAAS;AAAE,CAAC,EAClG;EAAEJ,MAAM,EAAE,CAAC;EAAEC,UAAU,EAAE,CAAC;EAAEC,MAAM,EAAE,SAAS;EAAEC,MAAM,EAAE,mBAAmB;EAAEC,OAAO,EAAE,CAAC,SAAS;AAAE,CAAC,EAClG;EAAEJ,MAAM,EAAE,CAAC;EAAEC,UAAU,EAAE,CAAC;EAAEC,MAAM,EAAE,SAAS;EAAEC,MAAM,EAAE,mBAAmB;EAAEC,OAAO,EAAE,CAAC,SAAS;AAAE,CAAC,CACrG;;AAED;AACA,OAAO,MAAMC,aAAa,CAAC;EACvB;EACAC,WAAWA,CAAA,EAAiB;IACxB,OAAOP,MAAM;EACjB;;EAEA;EACAQ,OAAOA,CAACC,KAAY,EAAQ;IACxBA,KAAK,CAACR,MAAM,GAAGS,IAAI,CAACC,GAAG,CAAC,GAAGX,MAAM,CAACY,GAAG,CAAEH,KAAK,IAAKA,KAAK,CAACR,MAAM,CAAC,CAAC,GAAG,CAAC;IACnED,MAAM,CAACa,IAAI,CAACJ,KAAK,CAAC;EACtB;;EAEA;EACAK,OAAOA,CAACb,MAAc,EAAQ;IAC1B,MAAMc,KAAK,GAAGf,MAAM,CAACgB,SAAS,CAAEP,KAAK,IAAKA,KAAK,CAACR,MAAM,KAAKA,MAAM,CAAC;IAClE,IAAIc,KAAK,KAAK,CAAC,CAAC,EAAE;MACdf,MAAM,CAACiB,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IAC3B;EACJ;AACJ;AACA;AACA,MAAMG,aAAa,GAAG,IAAIZ,aAAa,CAAC,CAAC;AACzC,eAAeY,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}